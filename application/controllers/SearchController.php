<?php
namespace application\controllers;

use application\models\CategoriesTour;
use application\models\Search;
use application\models\Tours;
use vendor\base\Controller;
use vendor\security\Csrf;

class SearchController extends Controller
{
    public function actionIndex()
    {
        $this->layout = 'tour';
        if (isset($_GET['search-form'])) {
            $search_form = $_GET['search-form'];

            $model = new Tours();
            if (isset($search_form['departure']) && !empty($search_form['departure']) && $search_form['departure'] != ''){
                $departure = $search_form['departure'];

                $model->where('departure',$departure);

            }

            if (isset($search_form['category']) && !empty($search_form['category']) && $search_form['category'] != ''){
                $category = $search_form['category'];
                $cats= CategoriesTour::getCatChildrent($category);
                $cats = explode(',',$cats);
                array_pop($cats); //bỏ phần tử cuối
                $cats = implode(',',$cats);
                $model->where('category','IN',$cats);

            }


            if (isset($search_form['check_in']) && !empty($search_form['check_in']) && $search_form['check_in'] != ''){
                $check_in = $search_form['check_in'];
                $check_in = explode('-',$check_in);
                $model->search(['check_in'=>$check_in[1].'-'.$check_in[2]]);// tim tour trong thangs

            }

            if (isset($search_form['total_person']) && !empty($search_form['total_person']) && $search_form['total_person'] != '')
            {
                $total_person = $search_form['total_person'];
                $model->where('total_residual','>=',$total_person);

            }

            if (isset($search_form['total_days']) && !empty($search_form['total_days']) && $search_form['total_days'] !='')
            {
                $total_days = $search_form['total_days'];
                $model->where('total_days','>=',$total_days)->where('total_days','<=',$total_days+7);

            }

            if (isset($search_form['price']) && !empty($search_form['price']) && $search_form['price'] !=''){
                $price = $search_form['price'];
                switch ($price){
                    case 1:
                        $model->where('price','<=',1000000);
                        break;
                    case 2:
                        $model->where('price','>=',1000000)->where('price','<=',2000000);
                        break;
                    case 3:
                        $model->where('price','>=',2000000)->where('price','<=',4000000);
                        break;
                    case 4:
                        $model->where('price','>=',4000000)->where('price','<=',6000000);
                        break;
                    case 4:
                        $model->where('price','>=',6000000);
                        break;
                }

            }
            $model = $model->where('status','active')->orderBy(['id'=>'DESC'])->get();
        }
        else{
            $model = Tours::model()->where('status','active')->orderBy(['id'=>'DESC'])->get();
        }


        $this->render('index', ['tours' => $model]);
    }
    public static function beforAction($action, $csrf = false,$post=true,$get=true)
    {
        return parent::beforAction($action, $csrf,$post,$get); // TODO: Change the autogenerated stub
    }
}